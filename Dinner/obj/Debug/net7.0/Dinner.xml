<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dinner</name>
    </assembly>
    <members>
        <member name="M:Dinner.Controllers.DinnerController.AddDinnerOrder(Dinner.Models.DinnerOrder)">
             <summary>
             POST Creates a Dinner record which will include name of dinner type and can include the restaurant name and items ordered.
             </summary>
             <param name="newDinnerOrder">A New Dinner order record</param>
             <returns>All records and the newly created Dinner Order</returns>
             <remarks>
             Sample request:
            
                 POST /Dinner
                 {
                    "id": 0,   // Don't need to enter-system generated
                    "name": "Cold Sandwiches",  //Required!
                    "restaurant": "Half Peach",
                     "menuItems": [
                     {
                         "id": 0,   //leave as 0 - system generated
                      "name": "cuban"
                    
                      },
                      {
                         "id": 0,     ///leave as 0 - system generated
                      "name": "po boy sandwhich"
                    
                      }
            
             </remarks>
             <response code="200">Added Successfully.  Returns the newly created item</response>
             <response code="400">Invalid Input Data - Make Sure id is integer</response>
        </member>
        <member name="M:Dinner.Controllers.DinnerController.GetAllDinnerOrders">
             <summary>
             GET Returns all Dinner record and menu items.
             </summary>
             <returns>A list of all Dinner Orders with Menu Items in the database</returns>
             <remarks>
             Sample reponse:
            
                 GET /Dinner
                 {
                    "id": 121  
                    "name": "Vegan Americana near University", 
                    "restaurant": "Lucky Pig at Paradise Palms, 41 Lotihian, Edinburgh",
                     "menuItems": [
                     {
                         "id": 1,   
                      "name": "fried pickles"
                    
                      },
                      {
                         "id": 3324,
                      "name": "mac and cheese"
                       }
                  }
                  {
                    "id": 43,  
                    "name": "Vegan KFC",  
                    "restaurant": "any KFC Edinburgh Scotland",
                     "menuItems": [
                     {
                         "id": 32,   
                      "name": "Original Recipe vegan Chickn"
                    
                      },
                      {
                         "id": 23,  
                      "name": "vegan french fries"
                      }
                   }
                   {
                    "id": 436,  
                    "name": "Vegan PapaJohns",  
                    "restaurant": "any PapaJohns Scotland",
                     "menuItems": [
                     {
                         "id": 15,   
                      "name": "Vegan Cheese Bread"
                    
                     }
                    }
                   
                    
            
             </remarks>
             <response code="200">Returns all database records</response>
             <response code="400">If the item is null</response>
             <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Dinner.Controllers.DinnerController.GetOrderById(System.Int32)">
             <summary>
             GET By Id Returns a specific Dinner record by Id
             </summary>
             <param name="id"></param>
             <returns>A Dinner Order with all Menu Items</returns>
             <remarks>
             Sample response where # is the entered Id:
            
                 GET /Dinner
                 {
                    "id": #,   // The id of the Dinner record requested
                    "name": "Cold Sandwiches",  
                    "restaurant": "Half Peach",
                     "menuItems": [
                     {
                         "id": 123,  
                      "name": "cuban"
                    
                      },
                      {
                         "id": 456,     
                      "name": "po boy sandwhich"
             </remarks>
             <response code="200">Return requested record by Id - SUCCESS </response>
             <response code="204">Record not Found - No Content </response>
             <response code="404">Not Found!</response>
             <response code="400">Client Error</response>
             <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Dinner.Controllers.DinnerController.PutString(System.Int32,Dinner.Models.DinnerOrder)">
             <summary>
             PUT a change to a Dinner Record.
             Change the Dinner Name, Restuarant Name and/or Change or Add a menu item
             </summary>
             <param name="id"></param>
              /// <param name="dinnerOrder"></param>
             <returns>Changed Dinner Order record </returns>
             <remarks>
             Sample response where # is the entered Id:
            
                 PUT /Dinner
                 {
                    "id": #,   // The id of the Dinner record to be updated
                    "name": "Cold Sandwiches", -- updated name
                    "restaurant": "Half Peach" -- Updated Name,
                     "menuItems": [
                     {
                         "id": 0,   //system generated id for Menu Item if adding or id to update
                      "name": "cuban" -- Added item or updated name
                    
                      },
                      {
                         "id": 0,     ///system generated id for Menu Item if adding or id to update
                      "name": "po boy sandwhich" -- Added Item or updated name
             </remarks> 
             <response code="200">Return requested record by Id - SUCCESS </response>
             <response code="404">Not Found!</response>
             <response code="400">Client Error</response>
             <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Dinner.Controllers.DinnerController.DeleteOrder(System.Int32)">
             <summary>
             DELETE a Dinner Record by Id.
             </summary>
             <param name="id"></param>
             <returns>Delete Dinner Order record </returns>
             <remarks>
             Sample response where # is the entered Id:
            
                 GET /Dinner
                 {
                    "id": #,   // The id of the Dinner record to be deleted
                    "name": "Cold Sandwiches", 
                    "restaurant": "Half Peach"
                     "menuItems": [
                     {
                         "id": 23,  
                      "name": "cuban"
                    
                      },
                      {
                         "id": 54,    
                      "name": "po boy sandwhich"
             </remarks>
             <response code="200">Return requested record by Id - SUCCESS </response>
             <response code="404">Not Found!</response>
             <response code="400">Client Error</response>
             <response code="500">Internal Server Error</response>
             
        </member>
        <member name="T:Dinner.Migrations.Initialize">
            <inheritdoc />
        </member>
        <member name="M:Dinner.Migrations.Initialize.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Dinner.Migrations.Initialize.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Dinner.Migrations.Initialize.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="P:Dinner.Models.DinnerOrder.Name">
            <summary>
            example of Dinner record
            </summary>
            <example>Dinner Name </example>
        </member>
        <member name="P:Dinner.Models.DinnerOrder.Restaurant">
            <example>Restaurant Name</example>
        </member>
        <member name="P:Dinner.Models.MenuItem.Id">
            <Summary>
             The  Menu Items that are ordered from the reaturant for the dinner
            </Summary>
        </member>
        <member name="P:Dinner.Models.MenuItem.Name">
            <example>Name(s) of the menu items that are ordered from the restaurant to make up the Dinner.For multiple Menu Items, copy code between and including brackets and separate with a comma.</example>
        </member>
    </members>
</doc>
