<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dinner</name>
    </assembly>
    <members>
        <member name="F:Dinner.Controllers.DinnerController.appDbContext">
            <Summary>Get these comments1</Summary>
        </member>
        <member name="M:Dinner.Controllers.DinnerController.AddDinnerOrder(Dinner.Models.DinnerOrder)">
             <summary>
             Creates a Dinner record which will include name of dinner type and can include the restaurant name and items ordered.
             </summary>
             <param name="newDinnerOrder">A New Dinner order record</param>
             <returns>A newly created Dinner Order</returns>
             <remarks>
             Sample request:
            
                 POST /Dinner
                 {
                    "id": 0,   // Don't need to enter-system generated
                    "name": "Cold Sandwiches",  //Required!
                    "restaurant": "Half Peach",
                     "menuItems": [
                     {
                         "id": 0,   //leave as 0 - system generated
                      "name": "cuban"
                    
                      },
                      {
                         "id": 0,     ///leave as 0 - system generated
                      "name": "po boy sandwhich"
                    
                      }
            
             </remarks>
             <response code="200">Returns the newly created item</response>
             <response code="400">If the item is null</response>
        </member>
        <member name="M:Dinner.Controllers.DinnerController.GetAllDinnerOrders">
             <summary>
             GETS all Dinner records with their corresponding Menu Items
             </summary>
             <returns>A list of all Dinner Orders with Menu Items in the database</returns>
             <remarks>
             Sample reponse:
            
                 GET /Dinner
                 {
                    "id": 0,   // Don't need to enter-system generated
                    "name": "Cold Sandwiches",  //Required!
                    "restaurant": "Half Peach",
                     "menuItems": [
                     {
                         "id": 0,   //leave as 0 - system generated
                      "name": "cuban"
                    
                      },
                      {
                         "id": 0,     ///leave as 0 - system generated
                      "name": "po boy sandwhich"
                    
                  }
                   {
                    "id": 0,   // Don't need to enter-system generated
                    "name": "Vegan KFC",  //Required!
                    "restaurant": "any KFC Edinburgh Scotland",
                     "menuItems": [
                     {
                         "id": 0,   //leave as 0 - system generated
                      "name": "Original Recipe vegan Chicken"
                    
                      },
                      {
                         "id": 0,     ///leave as 0 - system generated
                      "name": "vegan french fries"
                    
                  }
            
             </remarks>
             <response code="200">Returns all database records</response>
             <response code="304">Redirection Not Modified</response>
             <response code="400">If the item is null</response>
             <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Dinner.Controllers.DinnerController.GetOrderById(System.Int32)">
             <summary>
             Get a specific Dinner record.
             </summary>
             <param name="id"></param>
             <returns>A list of all Dinner Orders with Menu Items in the database</returns>
             <remarks>
             Sample response where # is the entered Id:
            
                 GET /Dinner
                 {
                    "id": #,   // The id of the Dinner record requested
                    "name": "Cold Sandwiches",  //Required!
                    "restaurant": "Half Peach",
                     "menuItems": [
                     {
                         "id": 0,   //system generated id for Menu Item
                      "name": "cuban"
                    
                      },
                      {
                         "id": 0,     ///system generated id for Menu Item
                      "name": "po boy sandwhich"
             </remarks>
             <response code="200">Return requested record by Id - SUCCESS </response>
             <response code="404">Not Found!</response>
             <response code="400">Client Error</response>
             <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Dinner.Controllers.DinnerController.PutString(System.Int32,Dinner.Models.DinnerOrder)">
             <summary>
             PUT a change to a Dinner Record.
             Change the Dinner Name, Restuarant Name and/or ADD a menu item
             </summary>
             <param name="id"></param>
              /// <param name="dinnerOrder"></param>
             <returns>Changed Dinner Order record </returns>
             <remarks>
             Sample response where # is the entered Id:
            
                 GET /Dinner
                 {
                    "id": #,   // The id of the Dinner record requested
                    "name": "Cold Sandwiches",  //Required!
                    "restaurant": "Half Peach",
                     "menuItems": [
                     {
                         "id": 0,   //system generated id for Menu Item
                      "name": "cuban"
                    
                      },
                      {
                         "id": 0,     ///system generated id for Menu Item
                      "name": "po boy sandwhich"
             </remarks>
             <response code="200">Return requested record by Id - SUCCESS </response>
             <response code="404">Not Found!</response>
             <response code="400">Client Error</response>
             <response code="500">Internal Server Error</response>
        </member>
        <member name="M:Dinner.Data.AppDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <Summary>
             Get these AppDbContext commetns
            </Summary>
            
        </member>
        <member name="T:Dinner.Migrations.Initial">
            <inheritdoc />
        </member>
        <member name="M:Dinner.Migrations.Initial.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Dinner.Migrations.Initial.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Dinner.Migrations.Initial.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="P:Dinner.Models.DinnerOrder.Name">
            <summary>
            example of Dinner record
            </summary>
            <example>REQUIRED dinner name for example mexican, vegan, sandwiches, etc.</example>
        </member>
        <member name="P:Dinner.Models.DinnerOrder.Restaurant">
            <example>Name of restaurant where this meal is ordered</example>
        </member>
        <member name="P:Dinner.Models.MenuItem.Id">
            <Summary>
             The  Menu Items that are ordered from the reaturant for the dinner
            </Summary>
        </member>
        <member name="P:Dinner.Models.MenuItem.Name">
            <example>Name(s) of the menu items that are ordered from the restaurant to make up the Dinner.For multiple Menu Items, copy code between and including brackets and separate with a comma.</example>
        </member>
    </members>
</doc>
